

.container-fluid
	.row
		.col-xs-10
			%ul.breadcrumb
				%li
					= link_to 'Admin', main_app.admin_index_path
				%li
					= link_to 'Course Admin', course_admin_index_path
				%li
					%strong
						Edit
						= @course.title
		.col-xs-2
			%a.btn.btn-primary{ href: preview_course_admin_path( @course.id ), target: '_new' }
				%i.fa.fa-eye
				Preview

	= form_for @course, url: course_admin_path( @course ) do |f|

		.row
			.col-xs-8
				.form-group
					= f.text_field :title, class: 'form-control input-lg'

				.form-group
					= f.label :slug_pref, 'URL for this course:'
					.input-group
						%span.input-group-addon
							= Pulitzer.app_host + @course.class.mounted_path
						= f.text_field :slug_pref, class: 'form-control', placeholder: @course.slug
						%span.input-group-btn
							%a.btn.btn-default{ 'data-clipboard-text' => @course.url }
								%i.fa.fa-clipboard

				.row
					.col-xs-4

						.form-group
							= f.label :avatar_attachment, "Avatar Image"
							= f.file_field :avatar_attachment
							- if @course.avatar
								= image_tag @course.avatar, class: 'img-responsive'
								%a.btn.btn-default{ 'data-clipboard-text' => @course.avatar }
									%i.fa.fa-clipboard

					.col-xs-4

						.form-group
							= f.label :cover_attachment, "Cover Image"
							= f.file_field :cover_attachment
							- if @course.cover_attachment.attached?
								= image_tag @course.cover_attachment.service_url, class: 'img-responsive'
								%a.btn.btn-default{ 'data-clipboard-text' => @course.cover_attachment.service_url }
									%i.fa.fa-clipboard

				.form-group
					= f.label :description, 'Summary'
					= f.text_area :description, class: 'form-control wysiwyg', data: { wysiwyg: { height_min: 100, toolbar_sticky: false, toolbar_preset: 'admin_default', object_class: @course.class.base_class.name, object_id: @course.id }.to_json }

				.form-group
					= f.label :syllabus
					= f.text_area :syllabus, class: 'form-control wysiwyg', data: { wysiwyg: { height_min: 200, toolbar_sticky: true, toolbar_preset: 'admin_default', object_class: @course.class.base_class.name, object_id: @course.id }.to_json }

				- if authorized?( Dewey::CourseContent, controller: Dewey::CourseContentAdminController, action: :create )
					%a.btn.btn-success{ href: main_app.new_course_content_admin_path( course_id: @course.id ) }
						%i.fa.fa-plus-square
						New
				%table.table.table-striped.table-hover{ style: 'margin-top: 1em' }
					%thead
						%th Title
						%th Sequence
						%th Release Offset
						%th Status
						%th
					%tbody
						- if @course_contents.blank?
							%tr
								%td{ colspan: 4 } - No CourseContents -
						- @course_contents.each do |course_content|
							%tr
								%td
									%a{ href: main_app.edit_course_content_admin_path( course_content.id ) }
										= course_content.title
								%td
									= course_content.seq
								%td
									= course_content.release_offset_humanize
								%td
									= course_content.status
								%td
									.btn-group
										%button.btn.btn-mini.btn-default.dropdown-toggle{ data: { toggle: :dropdown } }
											%i.fa.fa-cog
											%b.caret
										%ul.dropdown-menu
											%li
												%a{ href: main_app.edit_course_content_admin_path( course_content.id ) }
													%i.fa.fa-pencil
													Edit


				- if authorized?( Dewey::CourseCohort, controller: Dewey::CourseCohortAdminController, action: :create )
					%a.btn.btn-success{ data: { toggle: :modal, target: '#new_course_cohort' } }
						%i.fa.fa-plus-square
						New
				%table.table.table-striped.table-hover{ style: 'margin-top: 1em' }
					%thead
						%th Starts At
						%th Ends At
						%th Enrollment
						%th Instructor
						%th
					%tbody
						- if @course_cohorts.blank?
							%tr
								%td{ colspan: 5 } - No Cohorts -
						- @course_cohorts.each do |course_cohort|
							%tr
								%td
									= current_user.to_local_tz( course_cohort.starts_at ).to_s( :slashed_time )
								%td
									- if course_cohort.ends_at
										= current_user.to_local_tz( course_cohort.ends_at ).to_s( :slashed_time )
									- else
										\-
								%td=course_cohort.enrollments.count
								%td
									= course_cohort.instructor
								%td
									.btn-group
										%button.btn.btn-mini.btn-default.dropdown-toggle{ data: { toggle: :dropdown } }
											%i.fa.fa-cog
											%b.caret
										%ul.dropdown-menu
											%li
												%a{ href: edit_course_cohort_admin_path( course_cohort.id ) }
													%i.fa.fa-pencil
													Edit
											%li.divider
											%li
												%a{ href: course_cohort_admin_path( course_cohort ), data: { method: 'delete', confirm: 'Are you sure?' } }
													%i.fa.fa-trash-o
													Delete!


			.col-xs-4
				.well
					.form-group
						= f.label :instructor_id, 'Instructor'
						= f.collection_select :instructor_id, User.where( "role > 1" ), :id, :full_name, { include_blank: '-- None -- ' }, class: 'form-control'
					.form-group
						= f.label :publish_at
						= f.text_field :publish_at, value: current_user.to_local_tz( @course.publish_at ), class: 'form-control datetimepicker'
					-# .form-group
						= f.label :category_id
						= f.collection_select :category_id, Dewey::CourseCategory.active.order( :name ), :id, :name, { include_blank: '-- None -- ' }, class: 'form-control'
					.form-group
						= f.label :max_cohort_size
						= f.number_field :max_cohort_size, class: 'form-control', min: 1, step: 1, placeholder: 'unlimited'

					.form-group
						= f.label :duration_humanize, "Duration"
						= f.text_field :duration_humanize, class: 'form-control', placeholder: 'unlimited'

					.form-group
						= f.label :status
						= f.collection_select :status, Dewey::Course.statuses, :first, :first, {}, class: 'form-control'

					.form-group
						= f.label :availability
						= f.collection_select :availability, Dewey::Course.availabilities, :first, :first, {}, class: 'form-control'

					.form-group
						= f.label :course_type
						= f.collection_select :course_type, Dewey::Course.course_types, :first, :first, {}, class: 'form-control'

					.form-group
						= f.label :course_content_schedule
						= f.collection_select :course_content_schedule, Dewey::Course.course_content_schedules, :first, :first, {}, class: 'form-control'

					.form-group
						= f.label :course_content_flow
						= f.collection_select :course_content_flow, Dewey::Course.course_content_flows, :first, :first, {}, class: 'form-control'

					.form-group
						= f.label :start_schedule
						= f.collection_select :start_schedule, Dewey::Course.start_schedules, :first, :first, {}, class: 'form-control'

					.form-group
						= f.submit 'Update', class: 'btn btn-primary'

= render 'dewey/course_cohort_admin/new_modal', course: @course, args: {}
